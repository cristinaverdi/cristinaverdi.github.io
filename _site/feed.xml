<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cristina Verdi | Drafts &amp; Notes</title>
    <description>A Human Being.</description>
    <link>https://cristinaverdi.github.io/</link>
    <atom:link href="https://cristinaverdi.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 18 Jun 2019 19:01:09 +0200</pubDate>
    <lastBuildDate>Tue, 18 Jun 2019 19:01:09 +0200</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>Functional Programing Foundations: Introduction</title>
        <description>&lt;p&gt;Broadly speaking, functional programming is a style of programming in which the primary method of computation is the application of functions to arguments.&lt;/p&gt;

&lt;p&gt;Among other features, functional programing languages offer:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A compact notation for writing programs&lt;/li&gt;
  &lt;li&gt;Powerful abstraction methods for structuring programs&lt;/li&gt;
  &lt;li&gt;A simple mathematical basis that supports reasoning about programs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Functional languages represent the leading edge of programming language design, and the primary setting in which new programming concepts are introduced and studied. All contemporary programming languages such as Hack/PHP, C#, Visual Basic, F#, C++, Java, Scala, Clojure, Groovy, Javascript, Python, Ruby, Racket and many others, support higher-order programming via the concept of closures or lambda expressions.&lt;/p&gt;

&lt;h2 id=&quot;why-haskell&quot;&gt;Why Haskell?&lt;/h2&gt;

&lt;p&gt;While the specific language isn’t all that important, Haskell is a pure functional language so it is entirely appropriate for learning the essential ingredients for programming using mathematical functions. It is also a relatively small language, and hence it should be easy for you to get up to speed with Haskell.&lt;/p&gt;

&lt;p&gt;Understanding the &lt;em&gt;Why&lt;/em&gt;, &lt;em&gt;What&lt;/em&gt;, and _How that underlies pure funcitonal programming will help us to “think like a fundamentalist”, so that we can apply the concepts of functional programming to “code like a hacker” in mainstream programming languages.&lt;/p&gt;

&lt;h2 id=&quot;make-some-fire-even-without-matches&quot;&gt;Make some fire even without matches&lt;/h2&gt;

&lt;p&gt;Let me tell you a little bit of story. One day I was about to prepare some lunch when I realized that I’ve run out of matches and in consequence, wasn’t able to turn on the gas stove. I looked in every corner and drawer in the kitchen but couldn’t find any lighter either, at some point I remembered an ‘innovative’ trick that my mum used to do very often. I took an old newspaper and rolled a sheet, then walked towards the boiler and used the flame in order to burn the end of my improvised match. Yes, this method was a bit rudimentary but yet, I managed to turn on the gas stove :P.&lt;/p&gt;

&lt;p&gt;This is exactly the kind of mindset that you have to apply at work in order to code in a functional style even if you are not using a pure functional language. At the end of the day languages are just tools that we manouver according to some fundamentals.&lt;/p&gt;

&lt;h2 id=&quot;why-functional-programming-now-the-software-crisis&quot;&gt;Why Functional Programming now? The Software Crisis&lt;/h2&gt;

&lt;p&gt;It’s not a secret that there’s is an increasing interest in the industry in order to enable developers to deliver correct software, faster in order to reduce the cost of development and lead time. As developers we all know how challenging this goal can be, so the question is how can we make software in a way that we are confident of its correctness and at the same time, that we can make it fast. Well, as we can see by going through the last features of many modern languages, we can do that by incorporating functional programming concepts into this features, allowing develop to code in a functional style. Many of the end goal of this features is to allow a more concise expression and a higher level of abstraction. As we will see, all these techniques are based on &lt;a href=&quot;https://en.wikipedia.org/wiki/Lambda_calculus&quot;&gt;lambda calculus fundamentals&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Join me in the next post where we will discover what a Functional Language is and will compare functional vs imperative programming and how to apply the &lt;em&gt;Functional Style&lt;/em&gt; to mainstream languages.&lt;/p&gt;

&lt;p&gt;I hope you enjoy learning the fundamentals of functional programming during this series.&lt;/p&gt;

&lt;h5 id=&quot;sources&quot;&gt;Sources&lt;/h5&gt;
&lt;p&gt;&lt;span style=&quot;color:grey; font-size: 0.8em&quot;&gt;In this series about Functional programming Foundations, you’ll find a summarized version of the contents presented in the &lt;a href=&quot;https://www.edx.org/es/course/introduction-to-functional-2&quot;&gt;&lt;em&gt;Functional Programming with Haskell&lt;/em&gt; course by Erik Meijer&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 17 Jun 2019 04:34:04 +0200</pubDate>
        <link>https://cristinaverdi.github.io/posts/functional-programming-introduction/</link>
        <guid isPermaLink="true">https://cristinaverdi.github.io/posts/functional-programming-introduction/</guid>
        
        <category>Functional Programming</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>What is Cloud Computing?</title>
        <description>&lt;p&gt;Cloud computing refers to the on-demand delivery of IT resources and applications through the Internet.&lt;/p&gt;

&lt;p&gt;Before cloud computing we had to build our data centers around guessing what the maximum peaks might be. This may present two inconvenients. If our designs didn’t mirror exactly the actual peaks, our users might suffer. On the other hand, if we overplanned and exceeded our maximum peaks, we end up paying for resources that we actually don’t need.
t.&lt;/p&gt;

&lt;p&gt;With Cloud Computing, instead of having to design and build our own data centers, we access a data center and all of its resources via the internet allowing us to scale up or down based on our actual needs, without having to plan for the worst case scenario.&lt;/p&gt;

&lt;p&gt;With AWS we can access servers, databases, storage and higher level applicantion components in seconds. We can treat this as flexible and temporary resources free of the constraints of on premise infrastructure.&lt;/p&gt;

&lt;p&gt;By using AWS we can reduce risk, automatically scale our computing to meet our needs, ensure reliable coverage even in the face of a Natural disaster and secure our data.&lt;/p&gt;

&lt;p&gt;Cloud computing can reduce risks by being Agile, being able to learn and quickly adapt to change. This agility reduces the cost of change. So how do you reduce the risk of a large IT investment, not returning enough benefits? You seek the results of the investment and you pivot as soon as possible if you aren’t seeing those results. And how do you reduce your security risks? Test often, patch quickly and respond to incidents. All this approches to risk management are enabled by the cloud. Cloud services are designed to respong quickly and elasticly to the changing market. This facilitates scalability, agility and innovation and with prebuilt services that can be assembled like building blocks, it is possible to automate software delivery and create security and compliant apps.&lt;/p&gt;

&lt;h4 id=&quot;scalabillity&quot;&gt;Scalabillity&lt;/h4&gt;

&lt;p&gt;In Cloud computing, scalability means the ability to resize your resources as necessary. By using AWS customers can grow, shrink and adapt their consumption of resources to meet seasonal requirements, lunch new services and products or simply accommodate new strategic directions.&lt;/p&gt;

&lt;p&gt;The AWS Cloud delivers a scalable computing platform designed for high availability, independability&lt;/p&gt;

&lt;p&gt;Moving to the cloud results in increased agility: factors that influence agility: increasing speed, ease of experimentation and cultivating a culture of innovation.&lt;/p&gt;

&lt;p&gt;For example, with AWS, you can spin up servers in minutes and shut down servers when you don’t need them anyomore or put them to work for a different purpose. With virtual and automatable resources you can quickly carry out comparative testing using different types of instances, storage or configurations. For example, by using AWS CloudFormation, you have access to a consistent template based environment for development, test and production purposes with increasing levels of operational control. Cloud computing allows you to expiriment quickly with low cost and low risk.&lt;/p&gt;

&lt;h4 id=&quot;elasticity&quot;&gt;Elasticity&lt;/h4&gt;

&lt;p&gt;Elasticity is the power to scale cloud components up or down easily. Because the AWS Cloud is elastic you can quickly deploy new applications, instantly scale up as the workload grows and instantly shut down resources that are no longer required. So wheter you one computer or thousands, whether you need a computer for hours or 24/7, AWS Cloud provides and elastic infrastucture that can meet your needs. Using tools like autoscaling and load balancing, your application can automatically scale up or down based on demand. Backed by AWS infrastucture you can provide service to your users in multiple regions with lower latency.&lt;/p&gt;

&lt;h4 id=&quot;reliability&quot;&gt;Reliability&lt;/h4&gt;

&lt;p&gt;Reliability is the ability of a system to recover from infrastructure or service failures.&lt;/p&gt;

&lt;p&gt;In cloud computing, reliability means being able to aquire computing resources to meet demand and mitigate disruptions.&lt;/p&gt;

&lt;p&gt;In order to achieve reliability, your architecture and systems must have a well planned foundation that handles changes on demand, detects failures and automatically heals itself.&lt;/p&gt;

&lt;h4 id=&quot;aws-regions&quot;&gt;AWS Regions&lt;/h4&gt;

&lt;p&gt;Reliability is a key component of the AWS Cloud, that’s why AWS data centers are located all over the world in what we call AWS regions. Each regions is a geographically separated area that has multiple isolated locations know as availability zones. Availability zones consist of one or more discrete data centers whith each redundant power, networking and connectivity housed in separate facilities. So when you use AWS Cloud you can place resources like instances and data in multiple locations. That leads to reliability because if you’d host all your resources in a single location, and that location would fail, none of your resources would be available. Using availability zones let you operate production applications and databases that are highly available, fault tolerant and scalable better that what is possible with one single data center. The structure of our availability zones is intentional and tightly related to fault tolerance.&lt;/p&gt;

&lt;h4 id=&quot;fault-tolerance&quot;&gt;Fault tolerance&lt;/h4&gt;

&lt;p&gt;Fault tolerant means a system can remain operational even if some components of that system fail.&lt;/p&gt;

&lt;p&gt;Think of it as the built-in redundancy of an application’s components.&lt;/p&gt;

&lt;p&gt;High availability ensures that your systems are always funtioning and accesible and that downtime is minimized as much as possible without the need for human intervention.&lt;/p&gt;
</description>
        <pubDate>Sun, 16 Jun 2019 01:53:04 +0200</pubDate>
        <link>https://cristinaverdi.github.io/posts/what-is-cloud-computing/</link>
        <guid isPermaLink="true">https://cristinaverdi.github.io/posts/what-is-cloud-computing/</guid>
        
        <category>Cloud Computing</category>
        
        
        <category>posts</category>
        
      </item>
    
  </channel>
</rss>
