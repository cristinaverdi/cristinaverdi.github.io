<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WngLMng</title>
    <description>A coder.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 17 Jun 2019 00:32:11 +0200</pubDate>
    <lastBuildDate>Mon, 17 Jun 2019 00:32:11 +0200</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>Fixing 413 Request Entity Too Large Errors</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/images/201904/413-request-entity-too-large-lg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;413-request-entity-too-large-是什么意思&quot;&gt;413 Request Entity Too Large 是什么意思&lt;/h2&gt;
&lt;p&gt;当一个 request 请求内容太大，从客服端到服务端请求处理的时候，就可能会发生 413 request entity too large 这种错误。如果你的服务端设置了 HTTP 请求大小限制，客户端就会响应 413 request entity too large。举个例子，客户端尝试上传一个大文件到服务端。&lt;/p&gt;

&lt;p&gt;这种情况依赖于你使用的服务器类型来确定你需要修改什么配置。无论你想显示用户上传文件的大小，或者还是增大上传文件的限制，看下面。&lt;/p&gt;

&lt;h2 id=&quot;解决-413-request-entity-too-large-的问题&quot;&gt;解决 413 Request Entity Too Large 的问题&lt;/h2&gt;
&lt;h3 id=&quot;nginx&quot;&gt;Nginx&lt;/h3&gt;

&lt;p&gt;对于 Nginx 用户来说，可以修改 HTTP 请求大小对应的配置 &lt;em&gt;client_max_body_size&lt;/em&gt;。这个可能已经配置在 &lt;em&gt;nginx.conf&lt;/em&gt; 中了，如果没有，你可以添加这个指令在 &lt;em&gt;http&lt;/em&gt;，&lt;em&gt;server&lt;/em&gt;，或者 &lt;em&gt;location&lt;/em&gt; 代码块中。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server {
    client_max_body_size 100M;
    ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;client_max_body_size&lt;/em&gt; 的默认值是 1MB，你也可以修改成 0。&lt;/p&gt;

&lt;p&gt;一旦修改成了你想要的值，保存后记得重启 Nginx。&lt;/p&gt;

&lt;h3 id=&quot;apache&quot;&gt;Apache&lt;/h3&gt;

&lt;p&gt;对于 Apache 服务，有一个指令是 &lt;em&gt;LimitRequestBody&lt;/em&gt;，这条指令和 Nginx 中的 &lt;em&gt;client_max_body_size&lt;/em&gt; 指令提供同样的功能。这条指令配置在 &lt;em&gt;http.conf&lt;/em&gt; 文件中，默认值是 0，你可以修改成你希望的大小（单位字节）。
举个例子，你可以想下面这样，修改成 100MB 大小。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;LimitRequestBody 104857600
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;同样，修改后记得重启 Apache 服务。&lt;/p&gt;

&lt;h3 id=&quot;php&quot;&gt;PHP&lt;/h3&gt;

&lt;p&gt;对于 PHP 用户，可以尝试修改 &lt;em&gt;php.ini&lt;/em&gt; 中的配置，&lt;em&gt;upload_max_filesize&lt;/em&gt; 和 &lt;em&gt;post_max_size&lt;/em&gt;。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;uploa_max_filesize&lt;/em&gt; 代表着允许上传文件的最大值，默认 2MB&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;post_max_size&lt;/em&gt; 代表着 POST 数据 ，PHP 服务会接受的最大值，默认 8MB&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;同样，修改后记得重启 PHP 服务。&lt;/p&gt;
</description>
        <pubDate>Mon, 22 Apr 2019 05:30:00 +0200</pubDate>
        <link>http://localhost:4000/posts/fixing-413-request-entity-too-large-errors/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/fixing-413-request-entity-too-large-errors/</guid>
        
        <category>HTTP</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>浏览器中异步打开新标签页</title>
        <description>&lt;p&gt;最近在做项目，需要异步获取服务器端返回的URL，然后在新的标签页中打开该URL（因为种种原因，用户不希望这个页面消失，只想在新标签页中处理工作）。然后发现各种问题，有的浏览器可以，但是有的浏览器被拦截，甚至有的浏览器既不被拦截又一点反应没有。&lt;/p&gt;

&lt;p&gt;主要原因是，当 window.open 为用户触发事件内部或者加载时，不会被拦截，一旦将弹出代码移动到 ajax 或者一段异步代码内部，马上就出现被拦截的表现了，因为浏览器认为这是不安全的行为，默认都会被拦截。&lt;/p&gt;

&lt;p&gt;在网上找了些资料，多多少少会有些问题，可能是我的姿势不对。&lt;/p&gt;

&lt;p&gt;最后实现代码如下：&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// open a new blank tab&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newTab&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;about:blank&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;_blank&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ajax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;redirect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// async open a new tab&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;newTab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// close the blank tab&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;newTab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;到这里就结束了，就酱。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;参考&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://itindex.net/detail/52877-window.open-%E6%B5%8F%E8%A7%88%E5%99%A8&quot;&gt;window.open被浏览器拦截的解决方案&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 28 Jun 2017 14:09:47 +0200</pubDate>
        <link>http://localhost:4000/posts/async-open-new-tab-in-brower/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/async-open-new-tab-in-brower/</guid>
        
        <category>JavaScript</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>使用免费 SSL 证书 Let's Encrypt(certbot) 搭建 Https</title>
        <description>&lt;p&gt;Let’s Encrypt 是很火的一个免费 SSL 证书发行项目，自动化发行证书，证书有 90 天的有效期。适合个人使用或者临时使用，不用再忍受自签发证书不受浏览器信赖的提示。&lt;/p&gt;

&lt;p&gt;去年 VPS 侦探曾经说过 Let’s Encrypt 的使用教程，但是 Let’s Encrypt 已经发布了新的工具 certbot，虽然是新的工具，但是生成证书的使用方法和参数是基本一致的，证书续期更简单了。但是目前看 certbot 在一些老版本的Linux发行版上的兼容性还是有问题的，特别是在 CentOS 5 上因为 python 版本过低是无法用的，CentOS 6 上需要先安装 epel 才行，当然也有很多第三方的工具你也可以自己去尝试一下。&lt;/p&gt;

&lt;h2 id=&quot;配置&quot;&gt;配置&lt;/h2&gt;

&lt;p&gt;如果是 CentOS 6、7，先执行&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;epel-release
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;encrypt &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;encrypt
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget https://dl.eff.org/certbot-auto &lt;span class=&quot;nt&quot;&gt;--no-check-certificate&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chmod&lt;/span&gt; +x ./certbot-auto
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./certbot-auto &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;/certbot-auto -n&lt;/code&gt; 只是用来安装依赖包的，也可以跳过直接到下面的生成证书的步骤，国内 VPS 或服务器上使用的话建议先修改为国内的 pip 源。&lt;/p&gt;

&lt;h3 id=&quot;单域名生成证书&quot;&gt;单域名生成证书&lt;/h3&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./certbot-auto certonly &lt;span class=&quot;nt&quot;&gt;--email&lt;/span&gt; 79657392@qq.com &lt;span class=&quot;nt&quot;&gt;--agree-tos&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--webroot&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; /root/workspace/www.wnglmng.com &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; wnglmng.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;多域名多目录生成多个证书即一次生成多个域名的多个证书&quot;&gt;多域名多目录生成多个证书(即一次生成多个域名的多个证书)&lt;/h3&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./certbot-auto certonly &lt;span class=&quot;nt&quot;&gt;--email&lt;/span&gt; 79657392@qq.com &lt;span class=&quot;nt&quot;&gt;--agree-tos&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--webroot&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; /root/workspace/www.wnglmng.com &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; wnglmng.com &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; blog.wnglmng.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;最后提示&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;IMPORTANT NOTES:
 - Congratulations! Your certificate and chain have been saved at
   /etc/letsencrypt/live/www.wnglmng.com/fullchain.pem. Your cert will
   expire on 2017-03-26. To obtain a new or tweaked version of this
   certificate in the future, simply run certbot-auto again. To
   non-interactively renew *all* of your certificates, run
   &quot;certbot-auto renew&quot;
 - If you like Certbot, please consider supporting our work by:

   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate
   Donating to EFF:                    https://eff.org/donate-le
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;就是生成成功。&lt;/p&gt;

&lt;p&gt;生成的证书会存在 /etc/letsencrypt/live/www.wnglmng.com/ 目录下&lt;/p&gt;

&lt;p&gt;我的项目是部署在 Nginx 下，简单配置如下&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# HTTP server&lt;/span&gt;
    server &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        listen       80&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        server_name  wnglmng.com&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	    location / &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	        rewrite ^&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; https://&lt;span class=&quot;nv&quot;&gt;$server_name$1&lt;/span&gt; permanent&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# HTTPS server&lt;/span&gt;
    server &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        listen       443 ssl&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        server_name  wnglmng.com&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        ssl_certificate      /etc/letsencrypt/live/www.wnglmng.com/fullchain.pem&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        ssl_certificate_key  /etc/letsencrypt/live/www.wnglmng.com/privkey.pem&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        ssl_session_cache    shared:SSL:1m&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        ssl_session_timeout  5m&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        ssl_ciphers  HIGH:!aNULL:!MD5&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        ssl_prefer_server_ciphers  on&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        location / &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            root   /root/workspace/www.wnglmng.com&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            index  index.html index.htm&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;重新启动 Nginx &lt;code class=&quot;highlighter-rouge&quot;&gt;$ nginx -s reload&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;这就尴尬了，绿了！！！有木有！！！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/201612/nginx-config-https.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;证书续期&quot;&gt;证书续期&lt;/h2&gt;

&lt;p&gt;cerrbot 的续期比原来的更加简单，因为证书只有90天，所以建议使用crontab进行自动续期。&lt;/p&gt;

&lt;p&gt;crontab 里加上如下规则：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0 3 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/5 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; /encrypt/certbot-auto renew &lt;span class=&quot;nt&quot;&gt;--renew-hook&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;nginx -s reload&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样每5天就会执行一次所有域名的续期操作。当然时间也可以自行进行调整，建议别太频繁，因为他们都有请求次数的限制，如果需要强制更新可以在前面命令上加上 –force-renew 参数。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;转自 &lt;a href=&quot;https://www.vpser.net/build/letsencrypt-certbot.html&quot;&gt;免费SSL证书Let’s Encrypt(certbot)安装使用教程&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 25 Dec 2016 17:09:47 +0100</pubDate>
        <link>http://localhost:4000/posts/nginx-config-https/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/nginx-config-https/</guid>
        
        <category>HTTP</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Tue, 28 Jun 2016 18:09:47 +0200</pubDate>
        <link>http://localhost:4000/posts/welcome-to-jekyll/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/welcome-to-jekyll/</guid>
        
        <category>jekyll</category>
        
        
        <category>posts</category>
        
      </item>
    
  </channel>
</rss>
